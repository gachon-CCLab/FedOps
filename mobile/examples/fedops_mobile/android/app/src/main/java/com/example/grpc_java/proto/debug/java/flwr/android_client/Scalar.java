// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: transport.proto

package flwr.android_client;

/**
 * Protobuf type {@code flwr.proto.Scalar}
 */
public  final class Scalar extends
    com.google.protobuf.GeneratedMessageLite<
        Scalar, Scalar.Builder> implements
    // @@protoc_insertion_point(message_implements:flwr.proto.Scalar)
    ScalarOrBuilder {
  private Scalar() {
  }
  private int scalarCase_ = 0;
  private java.lang.Object scalar_;
  public enum ScalarCase {
    DOUBLE(1),
    SINT64(8),
    BOOL(13),
    STRING(14),
    BYTES(15),
    SCALAR_NOT_SET(0);
    private final int value;
    private ScalarCase(int value) {
      this.value = value;
    }
    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ScalarCase valueOf(int value) {
      return forNumber(value);
    }

    public static ScalarCase forNumber(int value) {
      switch (value) {
        case 1: return DOUBLE;
        case 8: return SINT64;
        case 13: return BOOL;
        case 14: return STRING;
        case 15: return BYTES;
        case 0: return SCALAR_NOT_SET;
        default: return null;
      }
    }
    public int getNumber() {
      return this.value;
    }
  };

  @java.lang.Override
  public ScalarCase
  getScalarCase() {
    return ScalarCase.forNumber(
        scalarCase_);
  }

  private void clearScalar() {
    scalarCase_ = 0;
    scalar_ = null;
  }

  public static final int DOUBLE_FIELD_NUMBER = 1;
  /**
   * <code>double double = 1;</code>
   * @return Whether the double field is set.
   */
  @java.lang.Override
  public boolean hasDouble() {
    return scalarCase_ == 1;
  }
  /**
   * <code>double double = 1;</code>
   * @return The double.
   */
  @java.lang.Override
  public double getDouble() {
    if (scalarCase_ == 1) {
      return (java.lang.Double) scalar_;
    }
    return 0D;
  }
  /**
   * <code>double double = 1;</code>
   * @param value The double to set.
   */
  private void setDouble(double value) {
    scalarCase_ = 1;
    scalar_ = value;
  }
  /**
   * <code>double double = 1;</code>
   */
  private void clearDouble() {
    if (scalarCase_ == 1) {
      scalarCase_ = 0;
      scalar_ = null;
    }
  }

  public static final int SINT64_FIELD_NUMBER = 8;
  /**
   * <pre>
   * float float = 2;
   * int32 int32 = 3;
   * int64 int64 = 4;
   * uint32 uint32 = 5;
   * uint64 uint64 = 6;
   * sint32 sint32 = 7;
   * </pre>
   *
   * <code>sint64 sint64 = 8;</code>
   * @return Whether the sint64 field is set.
   */
  @java.lang.Override
  public boolean hasSint64() {
    return scalarCase_ == 8;
  }
  /**
   * <pre>
   * float float = 2;
   * int32 int32 = 3;
   * int64 int64 = 4;
   * uint32 uint32 = 5;
   * uint64 uint64 = 6;
   * sint32 sint32 = 7;
   * </pre>
   *
   * <code>sint64 sint64 = 8;</code>
   * @return The sint64.
   */
  @java.lang.Override
  public long getSint64() {
    if (scalarCase_ == 8) {
      return (java.lang.Long) scalar_;
    }
    return 0L;
  }
  /**
   * <pre>
   * float float = 2;
   * int32 int32 = 3;
   * int64 int64 = 4;
   * uint32 uint32 = 5;
   * uint64 uint64 = 6;
   * sint32 sint32 = 7;
   * </pre>
   *
   * <code>sint64 sint64 = 8;</code>
   * @param value The sint64 to set.
   */
  private void setSint64(long value) {
    scalarCase_ = 8;
    scalar_ = value;
  }
  /**
   * <pre>
   * float float = 2;
   * int32 int32 = 3;
   * int64 int64 = 4;
   * uint32 uint32 = 5;
   * uint64 uint64 = 6;
   * sint32 sint32 = 7;
   * </pre>
   *
   * <code>sint64 sint64 = 8;</code>
   */
  private void clearSint64() {
    if (scalarCase_ == 8) {
      scalarCase_ = 0;
      scalar_ = null;
    }
  }

  public static final int BOOL_FIELD_NUMBER = 13;
  /**
   * <pre>
   * fixed32 fixed32 = 9;
   * fixed64 fixed64 = 10;
   * sfixed32 sfixed32 = 11;
   * sfixed64 sfixed64 = 12;
   * </pre>
   *
   * <code>bool bool = 13;</code>
   * @return Whether the bool field is set.
   */
  @java.lang.Override
  public boolean hasBool() {
    return scalarCase_ == 13;
  }
  /**
   * <pre>
   * fixed32 fixed32 = 9;
   * fixed64 fixed64 = 10;
   * sfixed32 sfixed32 = 11;
   * sfixed64 sfixed64 = 12;
   * </pre>
   *
   * <code>bool bool = 13;</code>
   * @return The bool.
   */
  @java.lang.Override
  public boolean getBool() {
    if (scalarCase_ == 13) {
      return (java.lang.Boolean) scalar_;
    }
    return false;
  }
  /**
   * <pre>
   * fixed32 fixed32 = 9;
   * fixed64 fixed64 = 10;
   * sfixed32 sfixed32 = 11;
   * sfixed64 sfixed64 = 12;
   * </pre>
   *
   * <code>bool bool = 13;</code>
   * @param value The bool to set.
   */
  private void setBool(boolean value) {
    scalarCase_ = 13;
    scalar_ = value;
  }
  /**
   * <pre>
   * fixed32 fixed32 = 9;
   * fixed64 fixed64 = 10;
   * sfixed32 sfixed32 = 11;
   * sfixed64 sfixed64 = 12;
   * </pre>
   *
   * <code>bool bool = 13;</code>
   */
  private void clearBool() {
    if (scalarCase_ == 13) {
      scalarCase_ = 0;
      scalar_ = null;
    }
  }

  public static final int STRING_FIELD_NUMBER = 14;
  /**
   * <code>string string = 14;</code>
   * @return Whether the string field is set.
   */
  @java.lang.Override
  public boolean hasString() {
    return scalarCase_ == 14;
  }
  /**
   * <code>string string = 14;</code>
   * @return The string.
   */
  @java.lang.Override
  public java.lang.String getString() {
    java.lang.String ref = "";
    if (scalarCase_ == 14) {
      ref = (java.lang.String) scalar_;
    }
    return ref;
  }
  /**
   * <code>string string = 14;</code>
   * @return The bytes for string.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString
      getStringBytes() {
    java.lang.String ref = "";
    if (scalarCase_ == 14) {
      ref = (java.lang.String) scalar_;
    }
    return com.google.protobuf.ByteString.copyFromUtf8(ref);
  }
  /**
   * <code>string string = 14;</code>
   * @param value The string to set.
   */
  private void setString(
      java.lang.String value) {
    java.lang.Class<?> valueClass = value.getClass();
  scalarCase_ = 14;
    scalar_ = value;
  }
  /**
   * <code>string string = 14;</code>
   */
  private void clearString() {
    if (scalarCase_ == 14) {
      scalarCase_ = 0;
      scalar_ = null;
    }
  }
  /**
   * <code>string string = 14;</code>
   * @param value The bytes for string to set.
   */
  private void setStringBytes(
      com.google.protobuf.ByteString value) {
    checkByteStringIsUtf8(value);
    scalar_ = value.toStringUtf8();
    scalarCase_ = 14;
  }

  public static final int BYTES_FIELD_NUMBER = 15;
  /**
   * <code>bytes bytes = 15;</code>
   * @return Whether the bytes field is set.
   */
  @java.lang.Override
  public boolean hasBytes() {
    return scalarCase_ == 15;
  }
  /**
   * <code>bytes bytes = 15;</code>
   * @return The bytes.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getBytes() {
    if (scalarCase_ == 15) {
      return (com.google.protobuf.ByteString) scalar_;
    }
    return com.google.protobuf.ByteString.EMPTY;
  }
  /**
   * <code>bytes bytes = 15;</code>
   * @param value The bytes to set.
   */
  private void setBytes(com.google.protobuf.ByteString value) {
    java.lang.Class<?> valueClass = value.getClass();
  scalarCase_ = 15;
    scalar_ = value;
  }
  /**
   * <code>bytes bytes = 15;</code>
   */
  private void clearBytes() {
    if (scalarCase_ == 15) {
      scalarCase_ = 0;
      scalar_ = null;
    }
  }

  public static flwr.android_client.Scalar parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static flwr.android_client.Scalar parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static flwr.android_client.Scalar parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static flwr.android_client.Scalar parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static flwr.android_client.Scalar parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data);
  }
  public static flwr.android_client.Scalar parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, data, extensionRegistry);
  }
  public static flwr.android_client.Scalar parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static flwr.android_client.Scalar parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static flwr.android_client.Scalar parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input);
  }
  public static flwr.android_client.Scalar parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
  }
  public static flwr.android_client.Scalar parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input);
  }
  public static flwr.android_client.Scalar parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageLite.parseFrom(
        DEFAULT_INSTANCE, input, extensionRegistry);
  }

  public static Builder newBuilder() {
    return (Builder) DEFAULT_INSTANCE.createBuilder();
  }
  public static Builder newBuilder(flwr.android_client.Scalar prototype) {
    return (Builder) DEFAULT_INSTANCE.createBuilder(prototype);
  }

  /**
   * Protobuf type {@code flwr.proto.Scalar}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageLite.Builder<
        flwr.android_client.Scalar, Builder> implements
      // @@protoc_insertion_point(builder_implements:flwr.proto.Scalar)
      flwr.android_client.ScalarOrBuilder {
    // Construct using flwr.android_client.Scalar.newBuilder()
    private Builder() {
      super(DEFAULT_INSTANCE);
    }

    @java.lang.Override
    public ScalarCase
        getScalarCase() {
      return instance.getScalarCase();
    }

    public Builder clearScalar() {
      copyOnWrite();
      instance.clearScalar();
      return this;
    }


    /**
     * <code>double double = 1;</code>
     * @return Whether the double field is set.
     */
    @java.lang.Override
    public boolean hasDouble() {
      return instance.hasDouble();
    }
    /**
     * <code>double double = 1;</code>
     * @return The double.
     */
    @java.lang.Override
    public double getDouble() {
      return instance.getDouble();
    }
    /**
     * <code>double double = 1;</code>
     * @param value The double to set.
     * @return This builder for chaining.
     */
    public Builder setDouble(double value) {
      copyOnWrite();
      instance.setDouble(value);
      return this;
    }
    /**
     * <code>double double = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearDouble() {
      copyOnWrite();
      instance.clearDouble();
      return this;
    }

    /**
     * <pre>
     * float float = 2;
     * int32 int32 = 3;
     * int64 int64 = 4;
     * uint32 uint32 = 5;
     * uint64 uint64 = 6;
     * sint32 sint32 = 7;
     * </pre>
     *
     * <code>sint64 sint64 = 8;</code>
     * @return Whether the sint64 field is set.
     */
    @java.lang.Override
    public boolean hasSint64() {
      return instance.hasSint64();
    }
    /**
     * <pre>
     * float float = 2;
     * int32 int32 = 3;
     * int64 int64 = 4;
     * uint32 uint32 = 5;
     * uint64 uint64 = 6;
     * sint32 sint32 = 7;
     * </pre>
     *
     * <code>sint64 sint64 = 8;</code>
     * @return The sint64.
     */
    @java.lang.Override
    public long getSint64() {
      return instance.getSint64();
    }
    /**
     * <pre>
     * float float = 2;
     * int32 int32 = 3;
     * int64 int64 = 4;
     * uint32 uint32 = 5;
     * uint64 uint64 = 6;
     * sint32 sint32 = 7;
     * </pre>
     *
     * <code>sint64 sint64 = 8;</code>
     * @param value The sint64 to set.
     * @return This builder for chaining.
     */
    public Builder setSint64(long value) {
      copyOnWrite();
      instance.setSint64(value);
      return this;
    }
    /**
     * <pre>
     * float float = 2;
     * int32 int32 = 3;
     * int64 int64 = 4;
     * uint32 uint32 = 5;
     * uint64 uint64 = 6;
     * sint32 sint32 = 7;
     * </pre>
     *
     * <code>sint64 sint64 = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearSint64() {
      copyOnWrite();
      instance.clearSint64();
      return this;
    }

    /**
     * <pre>
     * fixed32 fixed32 = 9;
     * fixed64 fixed64 = 10;
     * sfixed32 sfixed32 = 11;
     * sfixed64 sfixed64 = 12;
     * </pre>
     *
     * <code>bool bool = 13;</code>
     * @return Whether the bool field is set.
     */
    @java.lang.Override
    public boolean hasBool() {
      return instance.hasBool();
    }
    /**
     * <pre>
     * fixed32 fixed32 = 9;
     * fixed64 fixed64 = 10;
     * sfixed32 sfixed32 = 11;
     * sfixed64 sfixed64 = 12;
     * </pre>
     *
     * <code>bool bool = 13;</code>
     * @return The bool.
     */
    @java.lang.Override
    public boolean getBool() {
      return instance.getBool();
    }
    /**
     * <pre>
     * fixed32 fixed32 = 9;
     * fixed64 fixed64 = 10;
     * sfixed32 sfixed32 = 11;
     * sfixed64 sfixed64 = 12;
     * </pre>
     *
     * <code>bool bool = 13;</code>
     * @param value The bool to set.
     * @return This builder for chaining.
     */
    public Builder setBool(boolean value) {
      copyOnWrite();
      instance.setBool(value);
      return this;
    }
    /**
     * <pre>
     * fixed32 fixed32 = 9;
     * fixed64 fixed64 = 10;
     * sfixed32 sfixed32 = 11;
     * sfixed64 sfixed64 = 12;
     * </pre>
     *
     * <code>bool bool = 13;</code>
     * @return This builder for chaining.
     */
    public Builder clearBool() {
      copyOnWrite();
      instance.clearBool();
      return this;
    }

    /**
     * <code>string string = 14;</code>
     * @return Whether the string field is set.
     */
    @java.lang.Override
    public boolean hasString() {
      return instance.hasString();
    }
    /**
     * <code>string string = 14;</code>
     * @return The string.
     */
    @java.lang.Override
    public java.lang.String getString() {
      return instance.getString();
    }
    /**
     * <code>string string = 14;</code>
     * @return The bytes for string.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getStringBytes() {
      return instance.getStringBytes();
    }
    /**
     * <code>string string = 14;</code>
     * @param value The string to set.
     * @return This builder for chaining.
     */
    public Builder setString(
        java.lang.String value) {
      copyOnWrite();
      instance.setString(value);
      return this;
    }
    /**
     * <code>string string = 14;</code>
     * @return This builder for chaining.
     */
    public Builder clearString() {
      copyOnWrite();
      instance.clearString();
      return this;
    }
    /**
     * <code>string string = 14;</code>
     * @param value The bytes for string to set.
     * @return This builder for chaining.
     */
    public Builder setStringBytes(
        com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setStringBytes(value);
      return this;
    }

    /**
     * <code>bytes bytes = 15;</code>
     * @return Whether the bytes field is set.
     */
    @java.lang.Override
    public boolean hasBytes() {
      return instance.hasBytes();
    }
    /**
     * <code>bytes bytes = 15;</code>
     * @return The bytes.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getBytes() {
      return instance.getBytes();
    }
    /**
     * <code>bytes bytes = 15;</code>
     * @param value The bytes to set.
     * @return This builder for chaining.
     */
    public Builder setBytes(com.google.protobuf.ByteString value) {
      copyOnWrite();
      instance.setBytes(value);
      return this;
    }
    /**
     * <code>bytes bytes = 15;</code>
     * @return This builder for chaining.
     */
    public Builder clearBytes() {
      copyOnWrite();
      instance.clearBytes();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:flwr.proto.Scalar)
  }
  @java.lang.Override
  @java.lang.SuppressWarnings({"unchecked", "fallthrough"})
  protected final java.lang.Object dynamicMethod(
      com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
      java.lang.Object arg0, java.lang.Object arg1) {
    switch (method) {
      case NEW_MUTABLE_INSTANCE: {
        return new flwr.android_client.Scalar();
      }
      case NEW_BUILDER: {
        return new Builder();
      }
      case BUILD_MESSAGE_INFO: {
          java.lang.Object[] objects = new java.lang.Object[] {
            "scalar_",
            "scalarCase_",
          };
          java.lang.String info =
              "\u0000\u0005\u0001\u0000\u0001\u000f\u0005\u0000\u0000\u0000\u00013\u0000\bC\u0000" +
              "\r:\u0000\u000e\u023b\u0000\u000f=\u0000";
          return newMessageInfo(DEFAULT_INSTANCE, info, objects);
      }
      // fall through
      case GET_DEFAULT_INSTANCE: {
        return DEFAULT_INSTANCE;
      }
      case GET_PARSER: {
        com.google.protobuf.Parser<flwr.android_client.Scalar> parser = PARSER;
        if (parser == null) {
          synchronized (flwr.android_client.Scalar.class) {
            parser = PARSER;
            if (parser == null) {
              parser =
                  new DefaultInstanceBasedParser<flwr.android_client.Scalar>(
                      DEFAULT_INSTANCE);
              PARSER = parser;
            }
          }
        }
        return parser;
    }
    case GET_MEMOIZED_IS_INITIALIZED: {
      return (byte) 1;
    }
    case SET_MEMOIZED_IS_INITIALIZED: {
      return null;
    }
    }
    throw new UnsupportedOperationException();
  }


  // @@protoc_insertion_point(class_scope:flwr.proto.Scalar)
  private static final flwr.android_client.Scalar DEFAULT_INSTANCE;
  static {
    Scalar defaultInstance = new Scalar();
    // New instances are implicitly immutable so no need to make
    // immutable.
    DEFAULT_INSTANCE = defaultInstance;
    com.google.protobuf.GeneratedMessageLite.registerDefaultInstance(
      Scalar.class, defaultInstance);
  }

  public static flwr.android_client.Scalar getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static volatile com.google.protobuf.Parser<Scalar> PARSER;

  public static com.google.protobuf.Parser<Scalar> parser() {
    return DEFAULT_INSTANCE.getParserForType();
  }
}

