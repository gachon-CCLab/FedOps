---
client_device: 'ios'
server_port: 40015

# num_clients: 1000 # total number of clients
num_epochs: 10 # number of local epochs
batch_size: 10
num_rounds: 100
clients_per_round: 1

# stragglers_fraction: 0.9
# learning_rate: 0.03
# mu: 1.0 # it can be >= 0
# threshold: 0.5



# client_resources:
#   num_cpus: 3
#   num_gpus: 0.0

# server_device: cuda:1

# dataset_config:
#   iid: false
#   balance: false
#   power_law: true

# fit_config:
#   drop_client: false # with FedProx, clients shouldn't be dropped even if they are stragglers

# model:
#   _target_: fedprox.models.LogisticRegression
#   num_classes: 10

# strategy:
#   _target_: flwr.server.strategy.FedProx
#   fraction_fit: 0.00001 # because we want the number of clients to sample on each round to be solely defined by min_fit_clients
#   fraction_evaluate: 0.0
#   min_fit_clients: ${clients_per_round}
#   min_evaluate_clients: 0
#   min_available_clients: ${clients_per_round}
#   evaluate_metrics_aggregation_fn:
#     _target_: fedprox.strategy.weighted_average
#     _partial_: true # we dont' want this function to be evaluated when instantiating the strategy, we treat it as a partial and evaluate it when the strategy actually calls the function (in aggregate_evaluate())
#   proximal_mu: ${mu}
